<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>树莓派安装、启动、配置</title>
      <link href="/2020/08/11/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85%E3%80%81%E5%90%AF%E5%8A%A8%E3%80%81%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/08/11/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85%E3%80%81%E5%90%AF%E5%8A%A8%E3%80%81%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="初次使用树莓派"><a href="#初次使用树莓派" class="headerlink" title="初次使用树莓派"></a>初次使用树莓派</h3><p>树莓派是一种基于微处理器的卡片计算机，也就是说相比单片机等基于微控制器等设备，树莓派的性能更强，能够运行完整的操作系统，实现一些单片机性能不足而不能实现的功能。  </p><a id="more"></a> <h3 id="树莓的相关配件"><a href="#树莓的相关配件" class="headerlink" title="树莓的相关配件"></a>树莓的相关配件</h3><p>一台树莓派、一张大小8G以上的SD卡（提前写入树莓派系统）、电脑（通过ssh连接树莓派）</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="下载树莓派系统"><a href="#下载树莓派系统" class="headerlink" title="下载树莓派系统"></a>下载树莓派系统</h4><p>在树莓官网上下载最新的树莓派操作系统，这里以<strong>Raspbian</strong>(基于Debian的树莓派系统)为例。下载连接：<a href="https://www.raspberrypi.org/downloads/raspberry-pi-os/">https://www.raspberrypi.org/downloads/raspberry-pi-os/</a>    </p><p><img src="https://i.loli.net/2020/08/11/cKaZi1j9hmQyBbr.png"><br>这里可以选择<a href="https://downloads.raspberrypi.org/raspios_armhf_latest">Raspbian with desktop</a>版，这是带桌面界面的版本，也可以选择Raspbian Lite版,不带桌面系统，但体积小。</p><h4 id="使用USB-Image-Tool写入镜像到SD卡"><a href="#使用USB-Image-Tool写入镜像到SD卡" class="headerlink" title="使用USB Image Tool写入镜像到SD卡"></a>使用USB Image Tool写入镜像到SD卡</h4><p>下载地址：<a href="https://en.softonic.com/download/usb-image-tool/windows/post-download">https://en.softonic.com/download/usb-image-tool/windows/post-download</a>  </p><p><img src="https://i.loli.net/2020/08/11/eXHQdmEBNf9U6Ms.png" alt="ef4c24ceaad7726b843d3053bf0f64781523b977.png"><br>注意SD卡的盘符，选择Restore，然后选择刚下载好的镜像压缩包。USB Image Tool可以识别压缩包，不用解压，直接写入即可。</p><h4 id="配置树莓派SSH和WiFi"><a href="#配置树莓派SSH和WiFi" class="headerlink" title="配置树莓派SSH和WiFi"></a>配置树莓派SSH和WiFi</h4><h5 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h5><p>因为要通过SSH连接，所以要提前设置好连接的WIFI，并打开SSH的功能。将刷好 Raspbian 系统的 SD 卡用电脑读取。在 SD卡根目录下，也就是树莓派的 /boot 目录下新建 <strong>wpa_supplicant.conf</strong> 文件，按照下面的参考格式填入内容并保存 <strong>wpa_supplicant.conf</strong> 文件。ssid为网络的ssid， psk为密码。  </p><pre><code>country=CNctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdevupdate_config=1network=&#123;ssid=&quot;WiFi名称&quot;  psk=&quot;WiFi密码&quot;key_mgmt=WPA-PSK&#125;</code></pre><h5 id="配置SSH-1"><a href="#配置SSH-1" class="headerlink" title="配置SSH"></a>配置SSH</h5><p>和 WiFi 配置相似，同样在 boot 分区新建一个文件，空白的即可，文件命名为 <strong>ssh</strong>。注意要小写且不要有任何扩展名。</p><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>将树莓派供电，此时树莓派会自动设置SSH和WiFi，我们可以利用Advanced IP Scanner扫描局域网内树莓派的ip地址，或者通过登录本地路由器管理界面(192.168.0.1)查看树莓派的ip，通过SSH连接树莓派。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>整个过程还是遇到不少问题，有时候按照网上给的教程，有些步骤即使照着做，但还是没有成功，难免心态爆炸。最后还是查找解决的办法，多次尝试，解决了问题。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客NexT主题添加本地搜索</title>
      <link href="/2020/07/24/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2/"/>
      <url>/2020/07/24/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>昨天刚把Hexo搭建得差不多，今天决定给Hexo博客增加本地搜索（Local Search）的功能。  </p><a id="more"></a> <h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ul><li><p>安装插件<code>hexo-generator-searchdb</code>,命令行输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li><p>编辑<code>站点配置文件</code>，新增以下内容到任意位置，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">    path: search.xml</span><br><span class="line">    field: post</span><br><span class="line">    format: html</span><br><span class="line">    limit: 10000</span><br></pre></td></tr></table></figure></li><li><p>编辑<code>主题配置文件</code>，启用本地搜索功能，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure></li></ul><p>打开博客主页，在导航栏就可以看到本地搜索功能了，赶快去试一试吧</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 搜索插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Hexo开发个人博客</title>
      <link href="/2020/07/23/Nodejs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2020/07/23/Nodejs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><h3 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h3><ul><li>Hexo是一款基于Node.js的静态博客框架。这里的静态指的是对数据的处理方式，通过数据库来动态的查询、调用、展示的叫“动态”，直接生成纯.html网页文件来供浏览的叫“静态”。应用Hexo生成静态的博客页面，再将其托管到Github平台上，这是一种比较方便搭建个人博客的方法。  <a id="more"></a> <h3 id="Node-js简介"><a href="#Node-js简介" class="headerlink" title="Node.js简介"></a>Node.js简介</h3></li><li>Node.js 就是运行在服务端的 JavaScript。Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。  </li><li>Hexo的安装就需要用到Node.js的npm的包管理工具，通过npm安装Hexo和其主题等。</li></ul><h3 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h3><ul><li>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。  </li><li>通过Git来管理博客的文章，将Hexo博客上传到github上，建立个人博客网站。  </li></ul><h2 id="二、Hexo搭建步骤"><a href="#二、Hexo搭建步骤" class="headerlink" title="二、Hexo搭建步骤"></a>二、Hexo搭建步骤</h2><p><strong>开发环境为64位 Windows10</strong></p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><ul><li>Git的官方下载地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a>  </li><li>官方下载速度感人，从淘宝镜像站下载较快：<a href="https://npm.taobao.org/mirrors/git-for-windows/">https://npm.taobao.org/mirrors/git-for-windows</a><br>直接拉到底，最下面是最新版。安装过程全程默认即可，安装路径可改为其他位置。</li></ul><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Node.js的官方下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br>安装过程全程默认即可，根据需要改变安装路径。在命令控制台CMD输入以下命令，如果显示版本则安装成功。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>Git和Node.js安装完成后，就可以安装Hexo,在命令台输入以下命令，回车，稍等片刻。<br><code>npm install -g hexo-cli</code><br>输入<br><code>hexo -v</code><br>确认是否安装成功 </p><h4 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog</span><br><span class="line">cd myblog</span><br></pre></td></tr></table></figure><p>● 新建完成后，指定文件夹目录下有：<br>● node_modules: 依赖包<br>● public：存放生成的页面<br>● scaffolds：生成文章的一些模板<br>● source：用来存放你的文章<br>● <strong>themes：主题</strong><br>● ** _config.yml: 博客的配置文件**<br>在命令行输入  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>浏览器地址栏输入 <code>localhost:4000</code>，可以本地浏览你的博客，命令行<code>Ctrl+c</code>退出。</p><h3 id="Github创建个人仓库"><a href="#Github创建个人仓库" class="headerlink" title="Github创建个人仓库"></a>Github创建个人仓库</h3><p>如果还没有GitHub账号，现在马上去注册吧。</p><ul><li>注册完登录后，在GitHub.com中看到一个<strong>New repository</strong>，点它新建仓库。</li><li>新仓库的命名格式为**’xxxx.github.io’<strong>，这里的xxxx是你的github用户名，注意不要输错哦。点击</strong>create repository**。</li><li>生成SSH添加到GitHub，输入以下命令：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。<br>可以用以下两条，检查一下你有没有输对<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>然后创建SSH,一路回车<br><code>ssh-keygen -t rsa -C &quot;youremail&quot;</code>  </li><li>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。  </li><li>而后在GitHub的setting中，找到SSH keys的设置选项，点击<strong>New SSH key</strong>把你的id_rsa.pub里面的信息复制进去。  </li></ul><h3 id="将hexo部署到GitHub"><a href="#将hexo部署到GitHub" class="headerlink" title="将hexo部署到GitHub"></a>将hexo部署到GitHub</h3><p>将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，翻到最后，<strong>xxxx</strong>就是你的GitHub账户  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"> type: git</span><br><span class="line"> repo: https:&#x2F;&#x2F;github.com&#x2F;xxxx&#x2F;xxxx.github.io.git</span><br><span class="line"> branch: master</span><br></pre></td></tr></table></figure><p>需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。<br><code>npm install hexo-deployer-git --save</code><br>安装成功后输入    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写<br><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写<br>注意deploy时可能要你输入<strong>username</strong>和<strong>password</strong>。<br>刚部署时网页需要解析，稍等片刻，在<code>http://xxxx.github.io</code> 这个网站看到你的博客,xxxx为用户名字</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/07/22/hello-world/"/>
      <url>/2020/07/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
